from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery

from keyboards.inline import info_panel_btns, back_info_panel_btns
from configs.answers import *
from configs.states_group import not_in_state_filter


router = Router()
    

# --- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å c –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞---
@router.message(not_in_state_filter, Command("info"))
async def cmd_info(message: Message):
    await message.answer(
        f"<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b> üíñ\
        \n\n–ú—ã ‚Äî —É–¥–æ–±–Ω—ã–π –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å –¥–ª—è —Ä–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤!\
        \n\n–†–∞–¥—ã –≤–∏–¥–µ—Ç—å –í–∞—Å –Ω–∞ –Ω–∞—à–µ–π –ø–ª–æ—â–∞–¥–∫–µ –∏ –Ω–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—Å–∏–º –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å <i>–º–µ—Ç–æ–¥–∞–º–∏ —Å–±–æ—Ä–∞, —Ö—Ä–∞–µ–Ω–µ–Ω–∏—è –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</i> –í–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö, –∞ —Ç–∞–∫–∂–µ —Å <i>–ø—Ä–∏–Ω–∏–º–∞–µ–º—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</i>!",
        reply_markup=info_panel_btns().as_markup()
    )


@router.callback_query(not_in_state_filter, F.data == "info_panel_back")
async def info_panel_back_btn(callback: CallbackQuery):
    await callback.message.edit_text(
        f"<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b> üíñ\
        \n\n–ú—ã ‚Äî —É–¥–æ–±–Ω—ã–π –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å –¥–ª—è —Ä–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤!\
        \n\n–†–∞–¥—ã –≤–∏–¥–µ—Ç—å –í–∞—Å –Ω–∞ –Ω–∞—à–µ–π –ø–ª–æ—â–∞–¥–∫–µ –∏ –Ω–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—Å–∏–º –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å <i>–º–µ—Ç–æ–¥–∞–º–∏ —Å–±–æ—Ä–∞, —Ö—Ä–∞–µ–Ω–µ–Ω–∏—è –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</i> –í–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö, –∞ —Ç–∞–∫–∂–µ —Å <i>–ø—Ä–∏–Ω–∏–º–∞–µ–º—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</i>!",
        reply_markup=info_panel_btns().as_markup()
    )


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫–∏ –ø–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ ---
@router.callback_query(not_in_state_filter, F.data == "privacy_policy")
async def privacy_policy_btn(callback: CallbackQuery):
    await callback.message.edit_text(
        text=f"@{callback.from_user.username}, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –Ω–∞—à–µ–π <u>–ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</u>.",
        reply_markup=back_info_panel_btns().as_markup()
    )


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫–∏ —É—Å–ª–æ–≤–∏–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ---
@router.callback_query(not_in_state_filter, F.data == "terms_of_use")
async def terms_of_use_btn(callback: CallbackQuery):
    await callback.message.edit_text(
        text=f"@{callback.from_user.username}, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –Ω–∞—à–∏–º–∏ <u>—É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</u>.",
        reply_markup=back_info_panel_btns().as_markup()
    )
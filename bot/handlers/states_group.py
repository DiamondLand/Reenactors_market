from aiogram.fsm.state import StatesGroup, State
from aiogram import Router, F
from aiogram.filters import StateFilter
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext

from configs.answers import no_state_but_button_is


router = Router()


# --- StatesGroup –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ–¥–∞–≤—Ü–∞ –∏ –±–ª–æ–∫–∏—Ä—É—é—â–∏–π —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥ –≤–æ –≤—Ä–µ–º—è —Å—Ç–∞–¥–∏–π ---


class AddSeller(StatesGroup):
    company_name = State()
    phone = State()

    
not_in_state_filter = ~StateFilter(AddSeller.company_name, AddSeller.phone)


# --- –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –ø–æ –∫–Ω–æ–ø–∫–µ –æ—Ç–º–µ–Ω—ã ---


async def cancel_func(message: Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        await message.answer(
            text=no_state_but_button_is,
            reply_markup=ReplyKeyboardRemove()
        )
        return
    
    await state.clear()
    await message.answer(
        "<b>–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –ø—Ä–µ—Ä–≤–∞–Ω–æ!</b>\n\n<i>–ü—Ä–æ–ø–∏—à–∏—Ç–µ</i> /start <i>–¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –≥–ª–∞–≤–Ω—É—é –ø–∞–Ω–µ–ª—å üîÑ</i>",
        reply_markup=ReplyKeyboardRemove()
    )
